#自定义样式   
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL     
#%r 输出自应用启动到输出该log信息耗费的毫秒数     
#%c 输出所属的类目，通常就是所在类的全名     
#%t 输出产生该日志事件的线程名     
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”     
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，    
#   比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921     
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。 
#OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL(ERROR、WARN、INFO、DEBUG)

### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %5p %c{1}:%L - %m%n
#log4j.appender.stdout.layout.ConversionPattern=[%p] [%l] %d{yy-MM-dd HH:mm:ss} %n%m%n

### direct all messages to file logs.log ###
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=${workdir}/logs.log
log4j.appender.file.MaxFileSize=10000KB
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d %5p %c:%L - %m%n

### direct messages to file m-plugins.log ###
log4j.appender.plugins=org.apache.log4j.RollingFileAppender
log4j.appender.plugins.File=${workdir}/plugins.log
log4j.appender.plugins.MaxFileSize=10000KB
log4j.appender.plugins.layout=org.apache.log4j.PatternLayout
log4j.appender.plugins.layout.ConversionPattern=%d %5p %c:%L - %m%n




# Control logging for other open source packages
# Changing the log level to DEBUG when debug
#spring
#log4j.logger.org.springframework=INFO, plugins
#log4j.logger.org.springframework.jdbc.core.JdbcTemplate=DEBUG, plugins

# debug log for ibatis
#log4j.logger.java.sql.Connection=DEBUG, plugins
#log4j.logger.java.sql.Statement=DEBUG, plugins
#log4j.logger.java.sql.PreparedStatement=DEBUG, plugins

#hibernate
log4j.logger.org.hibernate=INFO
log4j.logger.org.hibernate.SQL=INFO

#struts2
log4j.logger.org.apache.struts2=INFO
log4j.logger.com.opensymphony.xwork2=INFO

### set log levels - for more verbose logging change 'info' to 'debug' ###
### To debug system conveniently,comment-out below line. ###
log4j.rootLogger=info, stdout

### add more debug levels here ###
log4j.logger.freemarker.cache=INFO, stdout
log4j.logger.freemarker.beans=INFO, stdout
#log4j.logger.com.demo2do.lighturl=DEBUG
